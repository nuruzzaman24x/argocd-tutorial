apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argo-wf-  # Name of this Workflow
spec:
  entrypoint: dag-template # Defines "dag-template" as the "main" template
  templates:
  - name: dag-template # Defining the "dag template" as a Template Invocator, You must use one of "dag" or "steps" as a template invocator
    dag:
      tasks:
        - name: A
          template: container-template
        - name: B
          template: script-template
          dependencies: [A]
        - name: C
          template: resource-template
          dependencies: [A]
        - name: D
          template: delay-template
          dependencies: [B, C]
# - name: steps-template # Defining the "steps template" as a Template Invocator, You must use one of "dag" or "steps" as a template invocator
#   steps:
#   - - name: step1
#       template: container-template
#   - - name: step2a
#       template: script-template
#     - name: step2b
#       template: resource-template
#   - - name: step3
#       template: delay-template


  - name: container-template # Defining the "container template" as a Template Definition
    container:
      image: alpine
      command: ["/bin/sh", "-c"]
      args: ["echo Hello from container template"]
  - name: script-template # Defining the "script template" as a Template Definition
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import random
        i = random.randint(1, 100)
        print(i)
  - name: resource-template # Defining the "resource template" as a Template Definition
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          generateName: argo-wf-resource-template-cm-
        data:
          created_by: argo-workflows
  - name: delay-template # Defining the "delay template" as a Template Definition
    suspend:
      duration: "20s"
